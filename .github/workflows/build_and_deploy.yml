name: Build Release APK with Debug Keystore

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (ex: 1.0.0)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - name: Install dependencies
        run: flutter pub get

      - name: Extract version from tag (if any)
        id: extract_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            VERSION_FROM_TAG=${TAG#v}
            echo "version_from_tag=$VERSION_FROM_TAG" >> $GITHUB_OUTPUT
          else
            echo "version_from_tag=" >> $GITHUB_OUTPUT
          fi

      - name: Set final version
        id: set_version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ -n "${{ steps.extract_version.outputs.version_from_tag }}" ]]; then
            echo "VERSION=${{ steps.extract_version.outputs.version_from_tag }}" >> $GITHUB_ENV
          else
            echo "VERSION=1.0.0" >> $GITHUB_ENV
          fi

      - name: Update pubspec.yaml version
        run: |
          sed -i "s/^version: .*/version: ${{ env.VERSION }}/" pubspec.yaml

      - name: Build release APK (debug signing fallback)
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
